
name: Update Chrome Extension

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      notes: ${{ steps.get_notes.outputs.notes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Disable default token usage

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git for semantic-release
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Build and release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm exec semantic-release

      - name: Get release version
        id: get_version
        run: echo "::set-output name=version::$(jq -r '.nextRelease.version' <<< $(pnpm exec semantic-release --dry-run --debug))"

      - name: Get release notes
        id: get_notes
        run: echo "::set-output name=notes::$(jq -r '.nextRelease.notes' <<< $(pnpm exec semantic-release --dry-run --debug))"

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.release.outputs.version }}
          release_name: Release ${{ needs.release.outputs.version }}
          body: ${{ needs.release.outputs.notes }}
          draft: false
          prerelease: false

  build-chrome-extension:
    name: Build Chrome Extension Artifact
    runs-on: ubuntu-latest
    needs: create-github-release
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4

      - name: Pull latest changes
        run: git pull origin main

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: Install dependencies
        run: pnpm install

      - name: Print version from package.json
        run: |
          echo "Version: $(jq -r '.version' package.json)"

      - name: Build
        run: pnpm build

      - name: Archive chrome-extension artifact
        run: |
          zip -r chrome-extension-${{ github.sha }}.zip dist

      - name: Upload chrome-extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension
          path: chrome-extension-${{ github.sha }}.zip

  upload-extension:
    name: Upload Extension
    runs-on: ubuntu-latest
    needs: build-chrome-extension
    env:
      EXTENSION_ID: ${{ vars.EXTENSION_ID }}

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Download bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: chrome-extension

      - name: Install webstore CLI
        run: npm install -g chrome-webstore-upload-cli

      - name: Upload step
        run: |
          chrome-webstore-upload upload \
            --source chrome-extension-${{ github.sha }}.zip \
            --extension-id ${{ env.EXTENSION_ID }} \
            --client-id ${{ secrets.CI_GOOGLE_CLIENT_ID }} \
            --client-secret ${{ secrets.CI_GOOGLE_CLIENT_SECRET }} \
            --refresh-token ${{ secrets.CI_GOOGLE_REFRESH_TOKEN }}
